name: Staging Release

on:
  workflow_dispatch:
    inputs:
      build_version:
        description: "The version to build.  It must be semver-compliant, and must not be for a tag that already exists. This requires a '-staging.X' suffix.. like 0.0.1-staging.2"
        required: true
        type: string
      pre_release:
        description: "Is this a pre-release? (Changes the visibility on GitHub.)"
        required: true
        type: boolean
concurrency:
  group: all
  cancel-in-progress: true

jobs:
  pre-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check version
        run: |
          echo ${{ inputs.build_version }} | grep -E '[0-9]+\.[0-9]+\.[0-9]+-staging\.[0-9]+' || (echo "Invalid version format. Must be semver-compliant with '-staging.X' suffix." && exit 1)

  build:
    needs: pre-check
    uses: ./.github/workflows/build.yaml
    secrets: inherit
    with:
      build_version: ${{ inputs.build_version }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: 'true'
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "${{ github.triggering_actor }}"
          git config --global user.email 'actions.ci@engine.com'

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Download Distribution Artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/dist
          pattern: dist-*
          merge-multiple: true

      - name: Git Tag
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag --annotate "${{ inputs.build_version }}" --message="${{ inputs.build_version }}"
          git push origin "${{ inputs.build_version }}"

      - name: Gradle Publish
        env:
          ENGINE_BUILD_VERSION: ${{ inputs.build_version }}
          MAVEN_USERNAME: ${{ vars.JF_USER }}
          MAVEN_PASSWORD: ${{ secrets.JF_PASSWORD }}
          MAVEN_DEPLOY_URL: https://hotelengine.jfrog.io/artifactory/release-gradle
        if: success()
        run: |
          ./gradlew publish

      - name: GitHub Release
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ inputs.build_version }}" --generate-notes --prerelease=${{ inputs.pre_release }} --verify-tag
          gh release upload "${{ inputs.build_version }}" build/dist/*


  pages:
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
