//
// Copyright 2025 HotelEngine, Inc., d/b/a Engine
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package engine.book.lodging.v1;

import "protoc-gen-openapiv2/options/annotations.proto";

import "engine/common/v1/loyalty.proto";

option go_package = "engine.com/engine-partner-api/v1/book/lodging";
option java_package = "com.engine.book.v1.lodging";
option java_multiple_files = true;

// Custom Metadata attached to a [BookingDetails].
// Metadata values allow a Partner API customer to carry a small amount of context on a [BookingDetails] for their own use.
message BookingMetadata {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Book_Lodging_BookingMetadata_v1"
    }
  };

  // A textual key to represent the purpose of the metadata, for example, "Contract ID".
  // Keys must be unique within a [BookingDetails].
  // Maximum length: 40 characters
  string key = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    max_length: 40;
  }];

  // A textual value.
  // Maximum length: 100 characters
  string value = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    max_length: 100;
  }];

  // If true, this Metadata entry will be included on invoices and reports.
  // If false, this entry will only be available via direct API access.
  bool external = 3;
}